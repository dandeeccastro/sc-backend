---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/login":
    post:
      summary: faz o login do usuário
      tags:
      - Autenticação
      parameters: []
      responses:
        '200':
          description: usuário logado com sucesso
        '401':
          description: credenciais incorretas
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cpf:
                  type: string
                password:
                  type: string
              required:
              - cpf
              - password
  "/events":
    get:
      summary: listar eventos
      tags:
      - Eventos
      responses:
        '200':
          description: listar todos os eventos
    post:
      summary: criar evento
      tags:
      - Eventos
      security:
      - token: []
      parameters: []
      responses:
        '201':
          description: evento criado com sucesso
        '401':
          description: sem permissão para criar evento
        '422':
          description: parâmetros inválidos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                slug:
                  type: string
                start_date:
                  type: string
                end_date:
                  type: string
                registration_start_date:
                  type: string
                banner_url:
                  type: file
              required:
              - name
              - start_date
              - end_date
  "/events/{id}":
    put:
      summary: atualizar evento
      tags:
      - Eventos
      security:
      - token: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: evento atualizado com sucesso
        '401':
          description: sem permissão para atualizar evento
    delete:
      summary: deleta evento
      tags:
      - Eventos
      security:
      - token: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: evento deletado com sucesso
        '401':
          description: sem permissão para remover evento
  "/events/{slug}":
    get:
      summary: mostra evento
      tags:
      - Eventos
      parameters:
      - name: slug
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: mostra evento com sucesso
  "/type":
    post:
      summary: criar tipo
      tags:
      - Tipos
      security:
      - token: []
      parameters: []
      responses:
        '201':
          description: tipo criado com sucesso
        '401':
          description: sem permissão para criar tipo
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
        '422':
          description: parâmetros inválidos
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                color:
                  type: string
              required:
              - name
              - color
  "/type/{id}":
    put:
      summary: atualizar tipo
      tags:
      - Tipos
      security:
      - token: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: tipo atualizado com sucesso
        '401':
          description: sem permissão para atualizar tipo
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                color:
                  type: string
              required:
              - id
              - name
              - color
    delete:
      summary: deletar tipo
      tags:
      - Tipos
      security:
      - token: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: tipo deletado com sucesso
        '401':
          description: sem permissão para remover tipo
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
  "/user":
    get:
      summary: listar usuários
      tags:
      - Usuário
      security:
      - token: []
      responses:
        '200':
          description: listagem de usuários com sucesso
        '401':
          description: sem permissão para listar
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
  "/user/{id}":
    get:
      summary: mostrar usuário
      tags:
      - Usuário
      security:
      - token: []
      responses:
        '401':
          description: sem permissão para listar
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
    put:
      summary: atualizar usuário
      tags:
      - Usuário
      security:
      - token: []
      responses:
        '401':
          description: sem permissão para listar
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
    delete:
      summary: remover usuário
      tags:
      - Usuário
      security:
      - token: []
      responses:
        '401':
          description: sem permissão para listar
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
  "/admin":
    get:
      summary: verifica se usuário é admin
      tags:
      - Usuário
      security:
      - token: []
      responses:
        '200':
          description: retorna boolean de verificação
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
components:
  schemas:
    error:
      type: object
      properties:
        message:
          type: string
  securitySchemes:
    token:
      type: apiKey
      name: Authorization
      in: header
